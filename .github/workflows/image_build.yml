name: Build Docker image
run-name: "Build Docker image with tag: ${{ inputs.image_tag == '' && 'latest' || inputs.image_tag }}"

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Input for custom Docker image tag'
        type: string
  workflow_call:
    inputs:
      image_tag:
        type: string

jobs:
  build:
    name: Building image

    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download artifact
        uses: actions/download-artifact@v3
        id: download-artifact
        continue-on-error: true
        with:
          name: ${{ github.ref_name }}-artifact
          path: web/target

      - name: Build with Maven
        if: steps.download-artifact.outcome == 'failure'
        run: mvn -B package -ntp -DskipTests

      - name: Get app version
        id: get_version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "app_version=${version}" >> $GITHUB_OUTPUT

      - name: Lint Dockerfile
        run: |
          docker run --rm -i ghcr.io/hadolint/hadolint < Dockerfile

      - name: Build the Docker image
        id: build_image
        run: |
          image_tag=${{ inputs.image_tag == '' && steps.get_version.outputs.app_version || inputs.image_tag }}
          image_name=${{ github.repository }}:${image_tag}
          echo "image_name=${image_name}" >> $GITHUB_OUTPUT
          
          docker build . --file Dockerfile --tag ${image_name}

          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            docker tag ${image_name} ${{ github.repository }}:latest
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.13.0
        with:
          image-ref: ${{ steps.build_image.outputs.image_name }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif
          category: trivy

      - name: Run Anchore Grype vulnerability scanner
        uses: anchore/scan-action@v3.3.6
        id: grype-scan
        with:
          image: ${{ steps.build_image.outputs.image_name }}
          fail-build: false

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}
          category: grype

