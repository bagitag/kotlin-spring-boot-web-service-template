services:
  server:
    depends_on:
      - database
    container_name: example-server
    build:
      dockerfile: Dockerfile
    image: example-server:latest
    environment:
      spring.datasource.url: jdbc:postgresql://database:5432/example
      spring.datasource.username: test
      spring.datasource.password: 12345
      spring.liquibase.change-log: classpath:liquibase/changelog-root.xml

      client.database.cache.enabled: true
      client.database.cache.expiration.minutes: 10

      client.jsonplaceholder.cache.enabled: true
      client.jsonplaceholder.cache.expiration.minutes: 10

      client.jsonplaceholder.base-url: https://jsonplaceholder.typicode.com
      client.jsonplaceholder.api-key: api-key

      client.jsonplaceholder.circuitbreaker.failure.rate: 10

      max.retry.attempts: 2

    ports:
      - "8080:8080"
    networks:
      - example-network
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  database:
    container_name: example-database
    image: postgres:latest
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=12345
    ports:
      - "5432:5432"
    networks:
      - example-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - example-network

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - example-network

networks:
  example-network:
    driver: bridge
